# utils/telegram_bot.py - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏

import requests
from bot_data import BOT_TOKEN

BASE_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

def send_telegram_message(chat_id, text):
    """–ë–∞–∑–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        response = requests.post(
            f"{BASE_URL}/sendMessage", 
            data={
                "chat_id": chat_id, 
                "text": text, 
                "parse_mode": "HTML"
            }, 
            timeout=10
        )
        result = response.json()
        if result.get('ok'):
            return True
        else:
            print(f"‚ùå Telegram API error: {result.get('description')}")
            return False
    except Exception as e:
        print(f"‚ùå Telegram send error: {e}")
        return False

def send_booking_notification(booking, notification_type='created'):
    """
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ
    
    Args:
        booking: –æ–±—ä–µ–∫—Ç –∑–∞—è–≤–∫–∏
        notification_type: —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ('created', 'confirmed', 'cancelled', 'completed')
    """
    print(f"\nüì± === TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ï ===")
    print(f"üìã –ó–∞—è–≤–∫–∞: #{booking.id}")
    print(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {booking.phone}")
    print(f"üîî –¢–∏–ø: {notification_type}")
    
    try:
        if not booking.phone:
            print("‚ùå –ù–µ—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
            return False
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        from models import TelegramUser
        
        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
        user = TelegramUser.query.filter_by(phone=booking.phone, is_verified=True).first()
        
        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º {booking.phone} –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ Telegram")
            print("üí° –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å /start –±–æ—Ç—É @korolevstvo_chudes_bot")
            return False
        
        print(f"üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_display_name()}")
        print(f"üì± Telegram ID: {user.telegram_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        service_name = booking.service.title if booking.service else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
        date_str = booking.event_date.strftime('%d.%m.%Y') if booking.event_date else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
        time_str = booking.event_time.strftime('%H:%M') if booking.event_time else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        if notification_type == 'created':
            message = f"""üéâ <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!</b>

<b>–ó–∞—è–≤–∫–∞ #{booking.id}</b>
üé™ –£—Å–ª—É–≥–∞: {service_name}
üìÖ –î–∞—Ç–∞: {date_str}
üë§ –ò–º—è: {booking.name}

‚úÖ –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏!

üìû –í–æ–ø—Ä–æ—Å—ã: +7 (XXX) XXX-XX-XX"""

        elif notification_type == 'confirmed':
            message = f"""‚úÖ <b>–ó–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!</b>

<b>–ó–∞—è–≤–∫–∞ #{booking.id}</b>
üé™ –£—Å–ª—É–≥–∞: {service_name}
üìÖ –î–∞—Ç–∞: {date_str}
üïê –í—Ä–µ–º—è: {time_str}
üìç –ú–µ—Å—Ç–æ: {booking.location or '–ë—É–¥–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–æ'}

üéâ –í–∞—à –ø—Ä–∞–∑–¥–Ω–∏–∫ —Å–æ—Å—Ç–æ–∏—Ç—Å—è! –ú—ã –≥–æ—Ç–æ–≤–∏–º—Å—è –∫ –≤–æ–ª—à–µ–±—Å—Ç–≤—É!

üìû –ö–æ–Ω—Ç–∞–∫—Ç: +7 (XXX) XXX-XX-XX"""

        elif notification_type == 'cancelled':
            message = f"""üòî <b>–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞</b>

<b>–ó–∞—è–≤–∫–∞ #{booking.id}</b>
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.

üí¨ –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:
üìû +7 (XXX) XXX-XX-XX

–ú—ã –ø–æ–º–æ–∂–µ–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≤–∞—à –∏–¥–µ–∞–ª—å–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫! üé™"""

        elif notification_type == 'completed':
            message = f"""üéâ <b>–ü—Ä–∞–∑–¥–Ω–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!</b>

<b>–ó–∞—è–≤–∫–∞ #{booking.id}</b>
–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –ß—É–¥–µ—Å!

–ù–∞–¥–µ–µ–º—Å—è, –ø—Ä–∞–∑–¥–Ω–∏–∫ –ø–æ–ª—É—á–∏–ª—Å—è –≤–æ–ª—à–µ–±–Ω—ã–º! ‚ú®

üåü –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ - –æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –Ω–∞ —Å–∞–π—Ç–µ!

üìû –ó–∞–∫–∞–∑–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –ø—Ä–∞–∑–¥–Ω–∏–∫: +7 (XXX) XXX-XX-XX
üåê prazdnikvdom.kz"""

        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {notification_type}")
            return False
        
        print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ:")
        print(f"üìÑ –î–ª–∏–Ω–∞: {len(message)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        result = send_telegram_message(user.telegram_id, message)
        
        if result:
            print(f"üéâ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –£–°–ü–ï–®–ù–û!")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user.update_activity()
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            return False
            
    except Exception as e:
        print(f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ send_booking_notification: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    finally:
        print(f"üèÅ === –ö–û–ù–ï–¶ TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===\n")

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
def send_booking_created_notification(booking):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏"""
    return send_booking_notification(booking, 'created')

def send_booking_confirmed_notification(booking):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏"""
    return send_booking_notification(booking, 'confirmed')

def send_booking_cancelled_notification(booking):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∑–∞—è–≤–∫–∏"""
    return send_booking_notification(booking, 'cancelled')

def send_booking_completed_notification(booking):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏"""
    return send_booking_notification(booking, 'completed')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É
def test_bot_connection():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram –±–æ—Ç—É"""
    try:
        response = requests.get(f"{BASE_URL}/getMe", timeout=10)
        result = response.json()
        
        if result.get('ok'):
            bot_info = result['result']
            print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info['username']}")
            print(f"   ID: {bot_info['id']}")
            print(f"   –ò–º—è: {bot_info['first_name']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result.get('description')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞: {e}")
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
def debug_check_user(phone):
    """–û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É"""
    try:
        from app import create_app
        from models import TelegramUser
        
        app = create_app()
        with app.app_context():
            user = TelegramUser.query.filter_by(phone=phone).first()
            
            if user:
                print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:")
                print(f"   –ò–º—è: {user.get_display_name()}")
                print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}")
                print(f"   Telegram ID: {user.telegram_id}")
                print(f"   –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: {user.is_verified}")
                print(f"   –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user.created_at}")
                print(f"   –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {user.last_activity}")
                return user
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º {phone} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return None
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return None