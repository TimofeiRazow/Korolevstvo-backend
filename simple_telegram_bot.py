import requests
import json
import time
import sys
import os
import re
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
from bot_data import BOT_TOKEN
BASE_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

class SimpleTelegramBot:
    def __init__(self):
        self.base_url = BASE_URL
        self.last_update_id = 0
        self.running = False
        
    def send_message(self, chat_id, text, parse_mode="HTML"):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        url = f"{self.base_url}/sendMessage"
        payload = {
            "chat_id": chat_id,
            "text": text,
            "parse_mode": parse_mode
        }
        
        try:
            response = requests.post(url, data=payload, timeout=10)
            result = response.json()
            
            if result.get('ok'):
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
                return result
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result.get('description')}")
                return None
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return None
    
    def get_updates(self, offset=None, timeout=30):
        """–ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram"""
        url = f"{self.base_url}/getUpdates"
        params = {
            'timeout': timeout,
            'allowed_updates': ['message']
        }
        
        if offset:
            params['offset'] = offset
            
        try:
            response = requests.get(url, params=params, timeout=timeout + 5)
            return response.json()
        except requests.exceptions.Timeout:
            return {'ok': True, 'result': []}
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
            return {'ok': False, 'result': []}
    
    def process_message(self, message):
        """–ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            chat_id = str(message['chat']['id'])
            text = message.get('text', '').strip()
            user_data = message['from']
            
            print(f"üì® {user_data.get('first_name', 'Unknown')} ({chat_id}): {text}")
            
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
            from app import create_app
            from models import db, TelegramUser
            
            app = create_app()
            with app.app_context():
                # –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user = TelegramUser.query.filter_by(telegram_id=chat_id).first()
                
                if not user:
                    user = TelegramUser(
                        telegram_id=chat_id,
                        username=user_data.get('username'),
                        first_name=user_data.get('first_name'),
                        last_name=user_data.get('last_name'),
                        registration_step='start'
                    )
                    db.session.add(user)
                    db.session.commit()
                    print(f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_display_name()}")
                
                # –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                if text == '/start':
                    self.handle_start(user)
                elif text == '/help':
                    self.handle_help(user)
                elif text == '/my_bookings' or text == '/mybookings':
                    self.handle_my_bookings(user)
                elif user.registration_step == 'phone':
                    self.handle_phone(user, text)
                else:
                    # –õ—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - —Å–ø—Ä–∞–≤–∫–∞
                    self.handle_help(user)
                
                user.update_activity()
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            self.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start")
    
    def handle_start(self, user):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        if user.is_verified:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
            message = f"""
üé™ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!</b>

–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.

<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}
üìß Email: {user.email or '–Ω–µ —É–∫–∞–∑–∞–Ω'}

–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞—à–∏—Ö –∑–∞—è–≤–∫–∞—Ö!

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/my_bookings - –ú–æ–∏ –∑–∞—è–≤–∫–∏
/help - –°–ø—Ä–∞–≤–∫–∞
            """
        else:
            # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            message = f"""
üé™ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –ß—É–¥–µ—Å!</b>

–ü—Ä–∏–≤–µ—Ç, {user.first_name}! 

–≠—Ç–æ—Ç –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞—à–∏—Ö –∑–∞—è–≤–∫–∞—Ö –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏.

üì± <b>–î–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b>

–ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∞:
‚Ä¢ +77051234567
‚Ä¢ 87051234567  
‚Ä¢ 77051234567

<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—Ç –∂–µ –Ω–æ–º–µ—Ä, —á—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –Ω–∞ —Å–∞–π—Ç–µ.</i>
            """
            user.registration_step = 'phone'
            from models import db
            db.session.commit()
        
        self.send_message(user.telegram_id, message)
    
    def handle_phone(self, user, phone_text):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
        from models import db
        
        # –û—á–∏—â–∞–µ–º –Ω–æ–º–µ—Ä
        phone = re.sub(r'[^\d+]', '', phone_text)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç (–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–µ –Ω–æ–º–µ—Ä–∞)
        if not re.match(r'^(\+7|8|7)\d{10}$', phone):
            message = """
‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞!</b>

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:
‚Ä¢ +77051234567
‚Ä¢ 87051234567
‚Ä¢ 77051234567

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:
            """
            self.send_message(user.telegram_id, message)
            return
        
        # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–æ–º–µ—Ä –∫ —Ñ–æ—Ä–º–∞—Ç—É +7XXXXXXXXXX
        if phone.startswith('8'):
            phone = '+7' + phone[1:]
        elif phone.startswith('7') and not phone.startswith('+7'):
            phone = '+' + phone
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        user.phone = phone
        user.is_verified = True
        user.registration_step = 'verified'
        db.session.commit()
        
        message = f"""
‚úÖ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>

üìû –í–∞—à –Ω–æ–º–µ—Ä: {phone}

–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞—à–∏—Ö –∑–∞—è–≤–∫–∞—Ö –≤ Telegram!

<b>–ß—Ç–æ –¥–∞–ª—å—à–µ?</b>
1. –ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ prazdnikvdom.kz
2. –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —ç—Ç–æ—Ç –∂–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ
3. –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä—è–º–æ —Å—é–¥–∞!

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/my_bookings - –ú–æ–∏ –∑–∞—è–≤–∫–∏
/help - –°–ø—Ä–∞–≤–∫–∞
        """
        
        self.send_message(user.telegram_id, message)
    
    def handle_my_bookings(self, user):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if not user.is_verified:
            message = """
‚ùå <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>

–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start
            """
            self.send_message(user.telegram_id, message)
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–∫–∏
        bookings = user.get_recent_bookings(5)
        
        if not bookings:
            message = """
üìã <b>–ó–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</b>

–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ.

üåê –°–¥–µ–ª–∞–π—Ç–µ –∑–∞–∫–∞–∑ –Ω–∞ —Å–∞–π—Ç–µ prazdnikvdom.kz –∏ –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!
            """
        else:
            message = "üìã <b>–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏:</b>\n\n"
            
            for booking in bookings:
                status_emoji = {
                    'new': 'üÜï',
                    'confirmed': '‚úÖ', 
                    'cancelled': '‚ùå',
                    'completed': 'üéâ'
                }.get(booking.status, 'üìù')
                
                service_name = booking.service.title if booking.service else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
                event_date = booking.event_date.strftime('%d.%m.%Y') if booking.event_date else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
                
                status_text = {
                    'new': '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞',
                    'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞',
                    'cancelled': '–û—Ç–º–µ–Ω–µ–Ω–∞', 
                    'completed': '–í—ã–ø–æ–ª–Ω–µ–Ω–∞'
                }.get(booking.status, booking.status)
                
                message += f"""
{status_emoji} <b>–ó–∞—è–≤–∫–∞ #{booking.id}</b>
üé™ {service_name}
üìÖ {event_date}
üìä {status_text}
üïê {booking.created_at.strftime('%d.%m.%Y')}

"""
        
        self.send_message(user.telegram_id, message)
    
    def handle_help(self, user):
        """–°–ø—Ä–∞–≤–∫–∞"""
        message = """
üé™ <b>–°–ø—Ä–∞–≤–∫–∞ - –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –ß—É–¥–µ—Å</b>

<b>–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>
/start - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/my_bookings - –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –∑–∞—è–≤–∫–∏
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

<b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
1Ô∏è‚É£ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –±–æ—Ç–µ (/start)
2Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
3Ô∏è‚É£ –ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ —Å —ç—Ç–∏–º –Ω–æ–º–µ—Ä–æ–º
4Ô∏è‚É£ –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞—è–≤–æ–∫!

<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>
üìû +7 (XXX) XXX-XX-XX
üåê prazdnikvdom.kz
üìß info@prazdnikvdom.kz
        """
        
        self.send_message(user.telegram_id, message)
    
    def start_listening(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è"""
        print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram Bot –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
        print(f"üì° –†–µ–∂–∏–º: Long Polling")
        print("üí¨ –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
        try:
            response = requests.get(f"{self.base_url}/getMe", timeout=10)
            if response.json().get('ok'):
                bot_info = response.json()['result']
                print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info['username']}")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É")
                return
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return
        
        # –£–¥–∞–ª—è–µ–º webhook
        try:
            requests.post(f"{self.base_url}/deleteWebhook", timeout=10)
            # print("üóëÔ∏è Webhook —É–¥–∞–ª–µ–Ω")
        except:
            pass
        
        self.running = True
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        while self.running:
            try:
                updates = self.get_updates(offset=self.last_update_id + 1)
                
                if not updates.get('ok'):
                    time.sleep(5)
                    continue
                
                messages = updates.get('result', [])
                
                for update in messages:
                    try:
                        self.last_update_id = update['update_id']
                        
                        if 'message' in update:
                            self.process_message(update['message'])
                    
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
                        continue
                
                time.sleep(1)
                
            except KeyboardInterrupt:
                print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
                self.running = False
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                time.sleep(10)
        
        print("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–æ—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞!)
def send_booking_notification(phone, message):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    try:
        from app import create_app
        from models import TelegramUser
        
        app = create_app()
        with app.app_context():
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
            user = TelegramUser.query.filter_by(phone=phone, is_verified=True).first()
            
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º {phone} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Telegram")
                return False
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            bot = SimpleTelegramBot()
            result = bot.send_message(user.telegram_id, message)
            
            if result:
                print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {phone}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {phone}")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
        return False

def send_booking_created_notification(booking):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏"""
    if not booking.phone:
        return False
    
    service_name = booking.service.title if booking.service else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
    event_date = booking.event_date.strftime('%d.%m.%Y') if booking.event_date else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
    
    message = f"""
üéâ <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!</b>

<b>–ó–∞—è–≤–∫–∞ #{booking.id}</b>
üé™ –£—Å–ª—É–≥–∞: {service_name}
üìÖ –î–∞—Ç–∞: {event_date}
üë§ –ò–º—è: {booking.name}

‚úÖ –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏!

üìû –í–æ–ø—Ä–æ—Å—ã: +7 (XXX) XXX-XX-XX
    """
    
    return send_booking_notification(booking.phone, message)

def send_booking_confirmed_notification(booking):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏"""
    if not booking.phone:
        return False
    
    service_name = booking.service.title if booking.service else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
    event_date = booking.event_date.strftime('%d.%m.%Y') if booking.event_date else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
    event_time = booking.event_time.strftime('%H:%M') if booking.event_time else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
    
    message = f"""
‚úÖ <b>–ó–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!</b>

<b>–ó–∞—è–≤–∫–∞ #{booking.id}</b>
üé™ –£—Å–ª—É–≥–∞: {service_name}
üìÖ –î–∞—Ç–∞: {event_date}
üïê –í—Ä–µ–º—è: {event_time}
üìç –ú–µ—Å—Ç–æ: {booking.location or '–ë—É–¥–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–æ'}

üéâ –í–∞—à –ø—Ä–∞–∑–¥–Ω–∏–∫ —Å–æ—Å—Ç–æ–∏—Ç—Å—è! –ú—ã –≥–æ—Ç–æ–≤–∏–º—Å—è –∫ –≤–æ–ª—à–µ–±—Å—Ç–≤—É!

üìû –ö–æ–Ω—Ç–∞–∫—Ç: +7 (XXX) XXX-XX-XX
    """
    
    return send_booking_notification(booking.phone, message)

def send_booking_cancelled_notification(booking):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∑–∞—è–≤–∫–∏"""
    if not booking.phone:
        return False
    
    message = f"""
üòî <b>–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞</b>

<b>–ó–∞—è–≤–∫–∞ #{booking.id}</b>
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.

üí¨ –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:
üìû +7 (XXX) XXX-XX-XX

–ú—ã –ø–æ–º–æ–∂–µ–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≤–∞—à –∏–¥–µ–∞–ª—å–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫! üé™
    """
    
    return send_booking_notification(booking.phone, message)

def send_booking_completed_notification(booking):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏"""
    if not booking.phone:
        return False
    
    message = f"""
üéâ <b>–ü—Ä–∞–∑–¥–Ω–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!</b>

<b>–ó–∞—è–≤–∫–∞ #{booking.id}</b>
–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –ß—É–¥–µ—Å!

–ù–∞–¥–µ–µ–º—Å—è, –ø—Ä–∞–∑–¥–Ω–∏–∫ –ø–æ–ª—É—á–∏–ª—Å—è –≤–æ–ª—à–µ–±–Ω—ã–º! ‚ú®

üåü –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ - –æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –Ω–∞ —Å–∞–π—Ç–µ!

üìû –ó–∞–∫–∞–∑–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –ø—Ä–∞–∑–¥–Ω–∏–∫: +7 (XXX) XXX-XX-XX
üåê prazdnikvdom.kz
    """
    
    return send_booking_notification(booking.phone, message)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) > 1:
        command = sys.argv[1]
        
        if command == "test":
            # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            if len(sys.argv) > 3:
                phone = sys.argv[2]
                message = " ".join(sys.argv[3:])
                result = send_booking_notification(phone, message)
                print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' if result else '‚ùå –û—à–∏–±–∫–∞'}")
            else:
                print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python simple_telegram_bot.py test +77051234567 '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'")
            return
        
        elif command == "info":
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
            try:
                response = requests.get(f"{BASE_URL}/getMe", timeout=10)
                if response.json().get('ok'):
                    bot_info = response.json()['result']
                    print(f"ü§ñ –ë–æ—Ç: @{bot_info['username']}")
                    print(f"   ID: {bot_info['id']}")
                    print(f"   –ò–º—è: {bot_info['first_name']}")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    bot = SimpleTelegramBot()
    try:
        bot.start_listening()
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞...")

if __name__ == "__main__":
    main()